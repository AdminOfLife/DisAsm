/*
* Filename: Register.h
* Author:   DisAsmCompany
* Date:     21/09/2013
*
* Description: possible x86/x64 register values
*              
*              
*
*/

#ifndef __REGISTER_H__
#define __REGISTER_H__

_ENUM_START(Register)

_ENUM_ELEMENT_VALUE_SKIP(rRegister ,0x1000) /* mask */
_ENUM_ELEMENT_VALUE_SKIP(eRegister, 0x2000) /* mask */

/* 8-bit  general purpose register (AL/CL/DL/BL/SPL/BPL/SIL/DIL) */
_ENUM_ELEMENT_VALUE_SKIP(Reg8,   0x00000008UL)
/* 16-bit general purpose register (AX/CX/DX/BX/SP/BP/SI/DI) */
_ENUM_ELEMENT_VALUE_SKIP(Reg16,  0x00000010UL)
/* 32-bit general purpose register (EAX/ECX/EDX/EBX/ESP/EBP/ESI/EDI) */
_ENUM_ELEMENT_VALUE_SKIP(Reg32,  0x00000020UL)
/* MMX register (MM0/MM1/MM2/MM3/MM4/MM5/MM6/MM7) */
_ENUM_ELEMENT_VALUE_SKIP(RegMMX, 0x00000080UL)
/* SSE register (XMM0/XMM1/XMM2/XMM3/XMM4/XMM5/XMM6/XMM7) */
_ENUM_ELEMENT_VALUE_SKIP(RegSSE, 0x00000100UL)
/* AVX register (YMM0/YMM1/YMM2/YMM3/YMM4/YMM5/YMM6/YMM7) */
_ENUM_ELEMENT_VALUE_SKIP(RegAVX, 0x00000200UL)

_ENUM_ELEMENT_VALUE(r0, 0x00UL)
_ENUM_ELEMENT_VALUE(r1, 0x01UL)
_ENUM_ELEMENT_VALUE(r2, 0x02UL)
_ENUM_ELEMENT_VALUE(r3, 0x03UL)
_ENUM_ELEMENT_VALUE(r4, 0x04UL)
_ENUM_ELEMENT_VALUE(r5, 0x05UL)
_ENUM_ELEMENT_VALUE(r6, 0x06UL)
_ENUM_ELEMENT_VALUE(r7, 0x07UL)

_ENUM_ELEMENT_VALUE(rAX, rRegister | r0)
_ENUM_ELEMENT_VALUE(rCX, rRegister | r1)
_ENUM_ELEMENT_VALUE(rDX, rRegister | r2)
_ENUM_ELEMENT_VALUE(rBX, rRegister | r3)
_ENUM_ELEMENT_VALUE(rSP, rRegister | r4)
_ENUM_ELEMENT_VALUE(rBP, rRegister | r5)
_ENUM_ELEMENT_VALUE(rSI, rRegister | r6)
_ENUM_ELEMENT_VALUE(rDI, rRegister | r7)

_ENUM_ELEMENT_VALUE(eAX, eRegister | r0)
_ENUM_ELEMENT_VALUE(eCX, eRegister | r1)
_ENUM_ELEMENT_VALUE(eDX, eRegister | r2)
_ENUM_ELEMENT_VALUE(eBX, eRegister | r3)
_ENUM_ELEMENT_VALUE(eSP, eRegister | r4)
_ENUM_ELEMENT_VALUE(eBP, eRegister | r5)
_ENUM_ELEMENT_VALUE(eSI, eRegister | r6)
_ENUM_ELEMENT_VALUE(eDI, eRegister | r7)

_ENUM_ELEMENT_VALUE(AL,  Reg8    | r0)
_ENUM_ELEMENT_VALUE(CL,  Reg8    | r1)
_ENUM_ELEMENT_VALUE(DL,  Reg8    | r2)
_ENUM_ELEMENT_VALUE(BL,  Reg8    | r3)
_ENUM_ELEMENT_VALUE(AH,  Reg8    | r4)
_ENUM_ELEMENT_VALUE(CH,  Reg8    | r5)
_ENUM_ELEMENT_VALUE(DH,  Reg8    | r6)
_ENUM_ELEMENT_VALUE(BH,  Reg8    | r7)

_ENUM_ELEMENT_VALUE(AX,  Reg16   | r0)
_ENUM_ELEMENT_VALUE(CX,  Reg16   | r1)
_ENUM_ELEMENT_VALUE(DX,  Reg16   | r2)
_ENUM_ELEMENT_VALUE(BX,  Reg16   | r3)
_ENUM_ELEMENT_VALUE(SP,  Reg16   | r4)
_ENUM_ELEMENT_VALUE(BP,  Reg16   | r5)
_ENUM_ELEMENT_VALUE(SI,  Reg16   | r6)
_ENUM_ELEMENT_VALUE(DI,  Reg16   | r7)

_ENUM_ELEMENT_VALUE(EAX, Reg32   | r0)
_ENUM_ELEMENT_VALUE(ECX, Reg32   | r1)
_ENUM_ELEMENT_VALUE(EDX, Reg32   | r2)
_ENUM_ELEMENT_VALUE(EBX, Reg32   | r3)
_ENUM_ELEMENT_VALUE(ESP, Reg32   | r4)
_ENUM_ELEMENT_VALUE(EBP, Reg32   | r5)
_ENUM_ELEMENT_VALUE(ESI, Reg32   | r6)
_ENUM_ELEMENT_VALUE(EDI, Reg32   | r7)

_ENUM_ELEMENT_VALUE(MM0, RegMMX  | r0)
_ENUM_ELEMENT_VALUE(MM1, RegMMX  | r1)
_ENUM_ELEMENT_VALUE(MM2, RegMMX  | r2)
_ENUM_ELEMENT_VALUE(MM3, RegMMX  | r3)
_ENUM_ELEMENT_VALUE(MM4, RegMMX  | r4)
_ENUM_ELEMENT_VALUE(MM5, RegMMX  | r5)
_ENUM_ELEMENT_VALUE(MM6, RegMMX  | r6)
_ENUM_ELEMENT_VALUE(MM7, RegMMX  | r7)

_ENUM_ELEMENT_VALUE(XMM0, RegSSE | r0)
_ENUM_ELEMENT_VALUE(XMM1, RegSSE | r1)
_ENUM_ELEMENT_VALUE(XMM2, RegSSE | r2)
_ENUM_ELEMENT_VALUE(XMM3, RegSSE | r3)
_ENUM_ELEMENT_VALUE(XMM4, RegSSE | r4)
_ENUM_ELEMENT_VALUE(XMM5, RegSSE | r5)
_ENUM_ELEMENT_VALUE(XMM6, RegSSE | r6)
_ENUM_ELEMENT_VALUE(XMM7, RegSSE | r7)

_ENUM_ELEMENT_VALUE(YMM0, RegAVX | r0)
_ENUM_ELEMENT_VALUE(YMM1, RegAVX | r1)
_ENUM_ELEMENT_VALUE(YMM2, RegAVX | r2)
_ENUM_ELEMENT_VALUE(YMM3, RegAVX | r3)
_ENUM_ELEMENT_VALUE(YMM4, RegAVX | r4)
_ENUM_ELEMENT_VALUE(YMM5, RegAVX | r5)
_ENUM_ELEMENT_VALUE(YMM6, RegAVX | r6)
_ENUM_ELEMENT_VALUE(YMM7, RegAVX | r7)

_ENUM_STOP(Register)

#endif /* __REGISTER_H__ */
